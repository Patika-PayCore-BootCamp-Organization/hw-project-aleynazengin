DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS movie;
DROP TABLE IF EXISTS theatre;
DROP TABLE IF EXISTS customer;
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS screening_movie;
DROP TABLE IF EXISTS "role";
DROP TABLE IF EXISTS "user";
CREATE TABLE "user"
(
    id       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(25) UNIQUE NOT NULL,
    email    VARCHAR(25) UNIQUE NOT NULL,
    password VARCHAR(255)       NOT NULL
);

CREATE TABLE "role"
(
    id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name varchar(10) UNIQUE NOT NULL
);

CREATE TABLE user_roles
(
    user_id INT NOT NULL,
    role_id INT NOT NULL,
    PRIMARY KEY (user_id, role_id)
);
CREATE TABLE genre
(
    id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20) NOT NULL
);
CREATE TABLE movie
(
    id      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR(50)  NOT NULL,
    description VARCHAR(250) NOT NULL,
    runtime INT NOT NULL,
    genre_id INT NOT NULL,
    FOREIGN KEY (genre_id) REFERENCES genre (id)
);

CREATE TABLE theatre
(
    id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name      VARCHAR(25) NOT NULL,
    city      VARCHAR(50) NOT NULL,
    province VARCHAR(50) NOT NULL,
    address   VARCHAR(250)
);
CREATE TABLE customer
(
    id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    firstname VARCHAR(25)   NOT NULL,
    lastname  VARCHAR(25)   NOT NULL,
    gender    VARCHAR(10),
    age       INT DEFAULT 0,
    phone     VARCHAR(15),
    email     VARCHAR(25) UNIQUE NOT NULL
);

CREATE TABLE screening_movie
(
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    movie_id     INT NOT NULL,
    theatre_id INT NOT NULL,
    date_of_screening DATE,
    FOREIGN KEY (movie_id) REFERENCES movie (id),
    FOREIGN KEY (theatre_id) REFERENCES theatre(id)
);
CREATE TABLE ticket
(
    id                  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id         INT NOT NULL,
    screening_movie_id  INT NOT NULL,
    price               DOUBLE NOT NULL
    FOREIGN KEY (customer_id) REFERENCES customer (id),
    FOREIGN KEY (screening_movie_id) REFERENCES screening_movie (id)
);
-- ////////////////////////////////////////////////////////////////////////////
--  Sample static test values
-- ////////////////////////////////////////////////////////////////////////////
INSERT INTO "role" (role_name)
VALUES ('ROLE_ADMIN');
INSERT INTO "role" (role_name)
VALUES ('ROLE_USER');

INSERT INTO customer(firstname, lastname, gender, age, phone, email)
VALUES ('Ali', 'Tek', 'male', 27, '905554443322', 'ali@gmail.com'),
       ('Ceren', 'Telli', 'female', 26, '905554443322', 'ceren@gmail.com'),
       ('Dilek', 'Tutku', 'female', 14, '905554443322', 'dilek3@gmail.com'),
       ('Cem', 'Saygın', 'male', 25, '905554443322', 'cem4@gmail.com'),
       ('Selin', 'Sanlı', 'female', 25, '905554443322', 'selin123@gmail.com'),
       ('Veli', 'Telli', 'male', 26, '905554443322', 'veli@hotmail.com'),
       ('Sam', 'Caroline', 'male', 25, '905554443322', 'veli3@hotmail.com'),
       ('Jhonny', 'Deepy', 'male', 41, '905554443322', 'jhonny@gmail.com'),
       ('Caroline', 'Geenny', 'female', 27, '905554443322', 'caroline@hotmail.com');

INSERT INTO genre(name)
VALUES ('Action'),
       ('Comedy'),git pull
       ('Drama'),
       ('Fantasy'),
       ('Horror'),
       ('Mystery'),
       ('Romance'),
       ('Thriller'),
       ('Science fiction');

INSERT INTO movie(name, description, runtime, rating, genre_id)
VALUES ('Uncharted',
'Uncharted is Sony\'s adaptation of the iconic gaming series created by Naughty Dog. Tom Holland plays Nathan Drake with Mark Wahlberg as his mentor Victor Sullivan.',
116,1);
